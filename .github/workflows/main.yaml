name: Test, Build, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.10"
  NODE_VERSION: "16.20"
  AZURE_WEBAPP_PACKAGE_PATH: "."

jobs:
  test_package:
    name: Test ${{ matrix.os }} Python ${{ matrix.python_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python_version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run Python tests
        run: python3 -m pytest
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Frontend
        run: |
          cd ../frontend
          npm install
          npm run build
      - name: Zip it!
        run: |
          cd ../backend
          zip -r python-app.zip .
      # Optional: Add a step to run tests here (PyTest, Django test suites, etc.)
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: app/backend/python-app.zip
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app
          path: .
      - run: |
          unzip python-app.zip
          rm python-app.zip
      - name: Logging in to Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: $ {{ secrets.AZURE_WEBAPP_NAME}}
          slot-name: "production"
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
